@using WebIfcFix.Shared;
@inherits DynamicComponentWithModelBase<FilterByStringComponentModel>
@inject LayoutManagerService LayoutManager

<p>
	@Model.ComponentInformation.FilterInstructions
</p>
<div class="row">
	<div class="form-floating col">
		<InputSelect id="filterOnSelect"
					 class="form-select"
					 @bind-Value="Model.FilterStrategy.StringValueGetter.ValueType">
			@foreach (ElementStringValueType val in Enum.GetValues(typeof(ElementStringValueType)))
			{
				<option value="@val">@val</option>
			}
		</InputSelect>
		<label for="filterOnSelect">
			What to filter on:
		</label>
	</div>
	@if (Model.FilterStrategy.StringValueGetter.ValueType == ElementStringValueType.Property)
	{
		<div class="form-floating col-6">
			<InputText id="propValueInput"
					   placeholded="Propety to check"
					   class="form-control"
					   @bind-Value=Model.FilterStrategy.StringValueGetter.PropertyName />
			<label for="propValueInput" class="p-3">
				Property to check:
			</label>
		</div>
	}
</div>
<div class="row">
	<div class="form-floating col-6">
		<InputSelect id="filterTypeSelect"
					 class="form-select"
					 @bind-Value="Model.FilterStrategy.StringChecker.FilterType">
			@foreach (StringFilterType val in Enum.GetValues(typeof(StringFilterType)))
			{
				<option value="@val">@val</option>
			}
		</InputSelect>
		<label for="filterTypeSelect">
			Filter type:
		</label>
	</div>
	<div class="form-floating col-6">
		<InputText id="filterTextInput"
				   placeholder="Text to filter on"
				   class="form-control"
				   @bind-Value=Model.FilterStrategy.FilteredString />
		<label for="filterTextInput" class="p-3">
			Text to filter on:
		</label>
	</div>
</div>

@code {
}
